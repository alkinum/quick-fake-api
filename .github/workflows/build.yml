name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x64, linux-arm64, macos-x64, macos-arm64, windows-x64]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Build binary
      run: bun run build/build.ts ${{ matrix.platform }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: fake-api-${{ matrix.platform }}
        path: dist/fake-api-${{ matrix.platform }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Get current timestamp
      if: github.event_name == 'workflow_dispatch'
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event_name == 'workflow_dispatch' && format('draft-{0}', steps.timestamp.outputs.timestamp) || github.ref }}
        release_name: ${{ github.event_name == 'workflow_dispatch' && format('Draft Release {0}', steps.timestamp.outputs.timestamp) || format('Release {0}', github.ref) }}
        draft: ${{ github.event_name == 'workflow_dispatch' }}
        prerelease: false

    - name: Upload Release Assets
      run: |
        for file in artifacts/*; do
          platform=$(basename "$file")
          asset_path="$file/fake-api-$platform"
          asset_name="fake-api-$platform"
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Content-Type: application/octet-stream" \
               --data-binary @"$asset_path" \
               "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$asset_name"
        done
